// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Victor;
//
//    var loanDemo = LoanDemo.FromJson(jsonString);

namespace Victor.CUI.RHDM.KIE.Model.LoanDemo
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LoanDemoRequest
    {
        [JsonProperty("lookup")]
        public string Lookup { get; set; }

        [JsonProperty("commands")]
        public Command[] Commands { get; set; }
    }

    public partial class Command
    {
        [JsonProperty("insert", NullValueHandling = NullValueHandling.Ignore)]
        public InsertLoanApplicant Insert { get; set; }

        [JsonProperty("fire-all-rules", NullValueHandling = NullValueHandling.Ignore)]
        public Dispose FireAllRules { get; set; }

        [JsonProperty("get-objects", NullValueHandling = NullValueHandling.Ignore)]
        public GetObjects GetObjects { get; set; }

        [JsonProperty("dispose", NullValueHandling = NullValueHandling.Ignore)]
        public Dispose Dispose { get; set; }
    }

    public partial class Dispose
    {
    }

    public partial class GetObjects
    {
        [JsonProperty("out-identifier")]
        public string OutIdentifier { get; set; }
    }

    public partial class InsertLoanApplicant
    {
        [JsonProperty("object")]
        public LoanApplicant Object { get; set; }

        [JsonProperty("out-identifier")]
        public string OutIdentifier { get; set; }
    }

    public partial class LoanApplicant
    {
        [JsonProperty("com.redhat.demos.dm.loan.model.Applicant", NullValueHandling = NullValueHandling.Ignore)]
        public Applicant ComRedhatDemosDmLoanModelApplicant { get; set; }

        [JsonProperty("com.redhat.demos.dm.loan.model.Loan", NullValueHandling = NullValueHandling.Ignore)]
        public Loan ComRedhatDemosDmLoanModelLoan { get; set; }
    }

    public partial class Applicant
    {
        [JsonProperty("creditScore")]
        public long CreditScore { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class Loan
    {
        [JsonProperty("amount")]
        public long Amount { get; set; }

        [JsonProperty("approved")]
        public bool Approved { get; set; }

        [JsonProperty("duration")]
        public long Duration { get; set; }

        [JsonProperty("interestRate")]
        public double InterestRate { get; set; }
    }

    public partial class LoanDemoRequest
    {
        public static LoanDemoRequest FromJson(string json) => JsonConvert.DeserializeObject<LoanDemoRequest>(json, Victor.CUI.RHDM.KIE.Model.LoanDemo.LoanDemoConverter.Settings);
    }

    public static class LoanDemoSerialize
    {
        public static string ToJson(this LoanDemoRequest self) => JsonConvert.SerializeObject(self, Victor.CUI.RHDM.KIE.Model.LoanDemo.LoanDemoConverter.Settings);
    }

    internal static class LoanDemoConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
